{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"weather-api-demo This is a small python library for interacting with the OpenWeather APIs. Currently the high level api supports the current weather and 5 day forecast endpoints (which are free) and the lower level request api can access the other endpoints. for more info on the full OpenWeather API see here Install pip3 install git+https://github.com/JohnCalhoun/weather-api-demo.git to setup local dev environment run: git clone https://github.com/JohnCalhoun/weather-api-demo.git cd weather-api-demo make init cp config.yml.example config.yml then create OpenWeather account and get an API Key Instructions . Finally, open config.yml and replace put_your_key_here with your api key. The API key is loaded in the unit tests and example.py scripts. Usage from weather import API api=API(\"your-api-key-here\") print(api.current(zip_code=\"75094\")) for a more involved example see example.py Docs see here for details Tests Unit tests are located in the ./tests folder and can be run by: make tests","title":"Home"},{"location":"#weather-api-demo","text":"This is a small python library for interacting with the OpenWeather APIs. Currently the high level api supports the current weather and 5 day forecast endpoints (which are free) and the lower level request api can access the other endpoints. for more info on the full OpenWeather API see here","title":"weather-api-demo"},{"location":"#install","text":"pip3 install git+https://github.com/JohnCalhoun/weather-api-demo.git to setup local dev environment run: git clone https://github.com/JohnCalhoun/weather-api-demo.git cd weather-api-demo make init cp config.yml.example config.yml then create OpenWeather account and get an API Key Instructions . Finally, open config.yml and replace put_your_key_here with your api key. The API key is loaded in the unit tests and example.py scripts.","title":"Install"},{"location":"#usage","text":"from weather import API api=API(\"your-api-key-here\") print(api.current(zip_code=\"75094\")) for a more involved example see example.py","title":"Usage"},{"location":"#docs","text":"see here for details","title":"Docs"},{"location":"#tests","text":"Unit tests are located in the ./tests folder and can be run by: make tests","title":"Tests"},{"location":"doc/","text":"weather API API(self, api_key, units='imperial') Main class for accessing OpenWeather API from weather import API import yaml zip_code=\"75094\" # Load API from a config file because DONT PUT IN CODE! with open(\"./config.yml\", 'r') as ymlfile: cfg = yaml.safe_load(ymlfile) api=API(cfg[\"API_KEY\"]) current=api.current(zip_code=zip_code) Arguments api_key (str) : API key for OpenWeather. units (str) : standard, metric, or imperial (default) request API.request(self, path, params) Arguments path (str) : the path in the api to send to eg. weather or forecast params (dict) : additional params to be sent of url params in the request Returns The raw JSON results returned as a nested dict object. current API.current(self, zip_code=None, city_name=None, city_id=None, lat_lon=None, country_code='us') get the current weather for a location. Must specifiy one of the following combinations: - zip_code and country_code - city_name and country_code - city_id - lat_lon Arguments zip_code (str) : zip code of location city_name (str) : name of the City such as 'London' city_id (str) : OpenWeather city ID lat_lon (array of str) : the first item is the latatude and the second is the longitude country_code (str) : example 'us' or 'uk' Returns { \"coord\": { \"lon\": -122.08, \"lat\": 37.39 }, \"weather\": [ { \"id\": 800, \"main\": \"Clear\", \"description\": \"clear sky\", \"icon\": \"01d\" } ], \"base\": \"stations\", \"main\": { \"temp\": 296.71, \"pressure\": 1013, \"humidity\": 53, \"temp_min\": 294.82, \"temp_max\": 298.71 }, \"visibility\": 16093, \"wind\": { \"speed\": 1.5, \"deg\": 350 }, \"clouds\": { \"all\": 1 }, \"dt\": 1560350645, \"sys\": { \"type\": 1, \"id\": 5122, \"message\": 0.0139, \"country\": \"US\", \"sunrise\": 1560343627, \"sunset\": 1560396563 }, \"timezone\": -25200, \"id\": 420006353, \"name\": \"Mountain View\", \"cod\": 200 } forecast API.forecast(self, zip_code=None, city_name=None, city_id=None, lat_lon=None, country_code='us') get the 5 day, 3 hour forecast a location. Must specifiy one of the following combinations: - zip_code and country_code - city_name and country_code - city_id - lat_lon Arguments zip_code (str) : zip code of location city_name (str) : name of the City such as 'London' city_id (str) : OpenWeather city ID lat_lon (array of str) : the first item is the latatude and the second is the longitude country_code (str) : example 'us' or 'uk' Returns [{ \"dt\":1406106000, \"main\":{ \"temp\":298.77, \"temp_min\":298.77, \"temp_max\":298.774, \"pressure\":1005.93, \"sea_level\":1018.18, \"grnd_level\":1005.93, \"humidity\":87, \"temp_kf\":0.26}, \"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"overcast clouds\",\"icon\":\"04d\"}], \"clouds\":{\"all\":88}, \"wind\":{\"speed\":5.71,\"deg\":229.501}, \"sys\":{\"pod\":\"d\"}, \"dt_txt\":\"2014-07-23 09:00:00\" }]","title":"Docs"}]}